import unittest
import pam
import bpy
import numpy
import mathutils

CONNECTIONS = [([bpy.data.objects['Pre'], bpy.data.objects['Synapse'], bpy.data.objects['Post']],
    'pam.neuron_group', 'pam.neuron_group', 1, [0, 0], [0, 0], 
    pam.mapping.kernel.gauss, [1.0, 1.0, 0.0, 0.0], 
    pam.mapping.kernel.gauss, [1.0, 1.0, 0.0, 0.0], 1)]

CONNECTION_RESULTS_D = numpy.array([[ 16.71366601],[ 16.39179059],[ 16.5812892 ],[ 17.03062907],[ 16.81279704],[ 17.27313131],[ 16.37949487],[ 16.23263868],[ 16.01141567],[ 16.17096953],[ 16.55577369],[ 16.17816445],[ 16.19484057],[ 16.00831751],[ 16.11868117],[ 16.36472451],[ 16.53020341],[ 16.38264317],[ 16.22695709],[ 16.03455188],[ 16.15300655],[ 16.17974467],[ 16.47103991],[ 16.25081489],[ 16.09727174],[ 16.57587564],[ 16.68338309],[ 16.49940952],[ 16.73932851],[ 16.85520114],[ 16.07401592],[ 16.62797335],[ 16.50687447],[ 16.11464023],[ 16.96789753],[ 16.60579084],[ 17.19775175],[ 16.21183512],[ 16.12541489],[ 16.04788386],[ 16.98047946],[ 16.38246342],[ 16.0160024 ],[ 16.55062871],[ 16.15896883],[ 16.22982872],[ 17.1901291 ],[ 16.36747289],[ 16.28847175],[ 16.87121872],[ 16.18949838],[ 16.10737742],[ 16.09601662],[ 16.42159789],[ 16.53029633],[ 16.1748657 ],[ 16.01391175],[ 16.44023963],[ 16.49025058],[ 16.73600865],[ 16.25197302],[ 16.31037501],[ 17.20653087],[ 16.34420917],[ 16.99940163],[ 16.10263902],[ 16.13108385],[ 16.71256469],[ 16.21707839],[ 16.27155106],[ 16.24471505],[ 16.93284   ],[ 16.30896943],[ 16.40363241],[ 16.74868864],[ 16.35421532],[ 16.63468881],[ 16.97721288],[ 16.05049888],[ 16.3761524 ],[ 16.6158807 ],[ 16.60744276],[ 16.87913831],[ 16.40894097],[ 16.27086438],[ 16.53366734],[ 17.0074675 ],[ 16.41650381],[ 16.35851135],[ 16.30407524],[ 16.32891859],[ 16.62137987],[ 16.34469505],[ 16.1717061 ],[ 16.65526326],[ 16.90077527],[ 16.37383851],[ 16.48296854],[ 16.09139997],[ 16.89721532]])
CONNECTION_RESULTS_S = [[mathutils.Vector((0.09000000357627869, 0.9900000095367432))], [mathutils.Vector((0.33000001311302185, 0.15000000596046448))], [mathutils.Vector((0.5299999713897705, 0.5299999713897705))], [mathutils.Vector((0.6100000143051147, 0.20999999344348907))], [mathutils.Vector((0.25, 0.75))], [mathutils.Vector((0.8700000047683716, 0.7900000214576721))], [mathutils.Vector((0.8899999856948853, 0.009999999776482582))], [mathutils.Vector((0.05000000074505806, 0.17000000178813934))], [mathutils.Vector((0.029999999329447746, 0.9900000095367432))], [mathutils.Vector((0.009999999776482582, 0.6499999761581421))], [mathutils.Vector((0.9100000262260437, 0.75))], [mathutils.Vector((0.8700000047683716, 0.9100000262260437))], [mathutils.Vector((0.7300000190734863, 0.12999999523162842))], [mathutils.Vector((0.9100000262260437, 0.9300000071525574))], [mathutils.Vector((0.7699999809265137, 0.09000000357627869))], [mathutils.Vector((0.8500000238418579, 0.28999999165534973))], [mathutils.Vector((0.949999988079071, 0.5699999928474426))], [mathutils.Vector((0.8100000023841858, 0.6299999952316284))], [mathutils.Vector((0.7300000190734863, 0.75))], [mathutils.Vector((0.8700000047683716, 0.05000000074505806))], [mathutils.Vector((0.6299999952316284, 0.7699999809265137))], [mathutils.Vector((0.8500000238418579, 0.23000000417232513))], [mathutils.Vector((0.3700000047683716, 0.7099999785423279))], [mathutils.Vector((0.8899999856948853, 0.6499999761581421))], [mathutils.Vector((0.5899999737739563, 0.1899999976158142))], [mathutils.Vector((0.38999998569488525, 0.49000000953674316))], [mathutils.Vector((0.5699999928474426, 0.25))], [mathutils.Vector((0.10999999940395355, 0.3499999940395355))], [mathutils.Vector((0.6700000166893005, 0.7300000190734863))], [mathutils.Vector((0.8100000023841858, 0.009999999776482582))], [mathutils.Vector((0.8500000238418579, 0.15000000596046448))], [mathutils.Vector((0.5699999928474426, 0.3700000047683716))], [mathutils.Vector((0.15000000596046448, 0.8299999833106995))], [mathutils.Vector((0.3700000047683716, 0.6100000143051147))], [mathutils.Vector((0.7300000190734863, 0.38999998569488525))], [mathutils.Vector((0.15000000596046448, 0.6299999952316284))], [mathutils.Vector((0.49000000953674316, 0.4099999964237213))], [mathutils.Vector((0.8899999856948853, 0.4699999988079071))], [mathutils.Vector((0.029999999329447746, 0.5299999713897705))], [mathutils.Vector((0.8899999856948853, 0.12999999523162842))], [mathutils.Vector((0.1899999976158142, 0.6700000166893005))], [mathutils.Vector((0.9700000286102295, 0.15000000596046448))], [mathutils.Vector((0.09000000357627869, 0.20999999344348907))], [mathutils.Vector((0.7300000190734863, 0.4099999964237213))], [mathutils.Vector((0.7300000190734863, 0.6899999976158142))], [mathutils.Vector((0.6100000143051147, 0.09000000357627869))], [mathutils.Vector((0.5699999928474426, 0.33000001311302185))], [mathutils.Vector((0.8700000047683716, 0.5699999928474426))], [mathutils.Vector((0.9900000095367432, 0.49000000953674316))], [mathutils.Vector((0.3499999940395355, 0.44999998807907104))], [mathutils.Vector((0.5299999713897705, 0.8100000023841858))], [mathutils.Vector((0.07000000029802322, 0.8299999833106995))], [mathutils.Vector((0.5099999904632568, 0.8899999856948853))], [mathutils.Vector((0.6499999761581421, 0.28999999165534973))], [mathutils.Vector((0.4300000071525574, 0.1899999976158142))], [mathutils.Vector((0.8700000047683716, 0.1899999976158142))], [mathutils.Vector((0.5899999737739563, 0.9700000286102295))], [mathutils.Vector((0.949999988079071, 0.3499999940395355))], [mathutils.Vector((0.8700000047683716, 0.8299999833106995))], [mathutils.Vector((0.38999998569488525, 0.6499999761581421))], [mathutils.Vector((0.75, 0.75))], [mathutils.Vector((0.5699999928474426, 0.8299999833106995))], [mathutils.Vector((0.550000011920929, 0.9700000286102295))], [mathutils.Vector((0.75, 0.75))], [mathutils.Vector((0.8100000023841858, 0.20999999344348907))], [mathutils.Vector((0.3100000023841858, 0.6700000166893005))], [mathutils.Vector((0.17000000178813934, 0.4300000071525574))], [mathutils.Vector((0.15000000596046448, 0.38999998569488525))], [mathutils.Vector((0.8100000023841858, 0.6299999952316284))], [mathutils.Vector((0.09000000357627869, 0.6700000166893005))], [mathutils.Vector((0.8100000023841858, 0.8899999856948853))], [mathutils.Vector((0.8100000023841858, 0.8899999856948853))], [mathutils.Vector((0.7099999785423279, 0.5699999928474426))], [mathutils.Vector((0.5299999713897705, 0.6700000166893005))], [mathutils.Vector((0.07000000029802322, 0.6299999952316284))], [mathutils.Vector((0.5899999737739563, 0.9700000286102295))], [mathutils.Vector((0.5899999737739563, 0.4099999964237213))], [mathutils.Vector((0.75, 0.23000000417232513))], [mathutils.Vector((0.9300000071525574, 0.09000000357627869))], [mathutils.Vector((0.7699999809265137, 0.9100000262260437))], [mathutils.Vector((0.23000000417232513, 0.6299999952316284))], [mathutils.Vector((0.7099999785423279, 0.8500000238418579))], [mathutils.Vector((0.3499999940395355, 0.8899999856948853))], [mathutils.Vector((0.5899999737739563, 0.44999998807907104))], [mathutils.Vector((0.8500000238418579, 0.10999999940395355))], [mathutils.Vector((0.3499999940395355, 0.6299999952316284))], [mathutils.Vector((0.25, 0.09000000357627869))], [mathutils.Vector((0.6899999976158142, 0.25))], [mathutils.Vector((0.550000011920929, 0.8500000238418579))], [mathutils.Vector((0.5299999713897705, 0.09000000357627869))], [mathutils.Vector((0.6100000143051147, 0.10999999940395355))], [mathutils.Vector((0.8500000238418579, 0.7699999809265137))], [mathutils.Vector((0.1899999976158142, 0.1899999976158142))], [mathutils.Vector((0.23000000417232513, 0.6899999976158142))], [mathutils.Vector((0.7900000214576721, 0.6100000143051147))], [mathutils.Vector((0.5699999928474426, 0.25))], [mathutils.Vector((0.6100000143051147, 0.7900000214576721))], [mathutils.Vector((0.5099999904632568, 0.7900000214576721))], [mathutils.Vector((0.4300000071525574, 0.6299999952316284))], [mathutils.Vector((0.6299999952316284, 0.4300000071525574))]]
CONNECTION_RESULTS_C = numpy.array([[ 5],[49],[36],[77],[51],[ 3],[18],[ 1],[71],[ 8],[31],[83],[62],[94],[18],[45],[78],[96],[72],[19],[54],[45],[55],[33],[56],[32],[11],[91],[38],[29],[85],[75],[71],[61],[63],[65],[36],[69],[99],[85],[53],[23],[60],[36],[36],[79],[36],[ 4],[30],[11],[74],[12],[58],[52],[44],[85],[38],[29],[26],[97],[35],[ 7],[70],[54],[30],[22],[97],[17],[73],[80],[98],[33],[33],[61],[65],[58],[25],[41],[19],[87],[70],[72],[38],[41],[90],[97],[ 1],[92],[14],[42],[ 6],[ 7],[47],[46],[87],[ 9],[38],[13],[22],[33]])

CONNECTION_INDICES = [[0, 1, 0]]

NG_DICT = {'Pre': {'pam.neuron_group': 1}, 'Post': {'pam.neuron_group': 0}}

NG_LIST = [['Post', 'pam.neuron_group', 100], ['Pre', 'pam.neuron_group', 100]]

class TestPamModel(unittest.TestCase):
    def setUp(self):
        bpy.ops.pam.mapping_compute()

    def testConnections(self):
        self.assertEqual(CONNECTIONS, pam.model.CONNECTIONS)

    def testConnectionResults(self):
        self.assertTrue(numpy.array_equal(CONNECTION_RESULTS_C, pam.model.CONNECTION_RESULTS[0]['c']))
        self.assertEqual(CONNECTION_RESULTS_S, pam.model.CONNECTION_RESULTS[0]['s'])
        self.assertTrue(numpy.array_equal(CONNECTION_RESULTS_D, pam.model.CONNECTION_RESULTS[0]['d']))

    def testConnectionIndices(self):
        self.assertEqual(CONNECTION_INDICES, pam.model.CONNECTION_INDICES)

    def testNeuronGroups(self):
        self.assertEqual(NG_LIST, pam.model.NG_LIST)
        self.assertEqual(NG_DICT, pam.model.NG_DICT)

if __name__ == '__main__':
    unittest.main(exit = False)